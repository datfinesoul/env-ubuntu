#!/usr/bin/env bash
SCRIPT="$(readlink -e -- "${0}")"
SCRIPT_BASE="$(basename "${SCRIPT}")"

if [[ "${SCRIPT_BASE}" == 'core.source' ]]; then
  echo ":: cannot call core.source directly"
  exit 1
fi

if [[ "$(id -u)" -eq "0" ]]; then
  echo "please DO NOT run as root";
  exit 1
fi

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit
set -o nounset
set -o pipefail
IFS=$'\n\t'

PID=$$
WORKDIR="/tmp/${SCRIPT_BASE}"
LOG="/tmp/${SCRIPT_BASE}.log"
DONE="/tmp/${SCRIPT_BASE}.done"

if [[ -f "${DONE}" ]]; then
  echo ":: ${SCRIPT_BASE}:${PID} skip"
  exit 0
fi

[[ -d "${WORKDIR}" ]] && rm -rf "${WORKDIR}"

# log stdout/stderr to a file and stdout
exec &> >(tee "${LOG}")

function cleanup {
  # shellcheck disable=SC2154
  if [ -n "${1:-}" ]; then
    echo ":: ${SCRIPT_BASE}:${PID} Aborted by ${1:-}"
  elif [ "${status}" -ne 0 ]; then
    echo ":: ${SCRIPT_BASE}:${PID} Failure (status $status)"
  else
    echo ":: ${SCRIPT_BASE}:${PID} Success"
    touch "${DONE}"
  fi
  popd > /dev/null
}
export -f cleanup
trap 'status=$?; cleanup; exit $status' EXIT
trap 'trap - HUP; cleanup SIGHUP; kill -HUP $$' HUP
trap 'trap - INT; cleanup SIGINT; kill -INT $$' INT
trap 'trap - TERM; cleanup SIGTERM; kill -TERM $$' TERM

mkdir -p "${WORKDIR}"
pushd "${WORKDIR}" > /dev/null
